// __multiversion__
// This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.

#include "vertexVersionCentroidUV.h"
#include "uniformPerFrameConstants.h"
#include "uniformWorldConstants.h"
#include "natural-mystic-config.h"
#include "natural-mystic-hacks.h"

attribute POS4 POSITION;
attribute vec2 TEXCOORD_0;

#if defined(ENABLE_SHADER_SUN_MOON)

/* This is the vertex position is the model-local space whose origin
 * is the center of the sun or the moon.
 */
varying vec2 localPos;

/* 1.0 when it's dusk or dawn. */
varying float duskOrDown;

/* 1.0 when it's night. */
varying float night;

/* The phase of the moon. */
varying float phase;

#endif /* defined(ENABLE_SHADER_SUN_MOON) */

/* Translate the texture UV into the phase of moon. This function
 * returns [0, 2π) where 0 is the new moon and π is the full
 * moon. This is a hack.
 */
float moonPhase(vec2 texUV) {
    float x = floor(texUV.x * 4.0) * 0.25; // {0, 0.25, 0.5, 0.75}
    float y = step(0.5, texUV.y);          // {0, 1}
    return (x + y) * 3.14159;
}

void main()
{
#if defined(ENABLE_SHADER_SUN_MOON)

    /* Enlarge the sun and the moon as the default size is too small
     * for us. We are going to draw actual shape of the sun and the
     * moon inside these vertices.
     */
    POS4 p = POSITION * vec2(10.0, 1.0).xyxy;
    gl_Position = WORLDVIEWPROJ * p;

    /* Apply some rotation to the moon. */
    localPos = mat2(0.8, 0.6, -0.6, 0.8) * p.xz;

    /* Hacky time detections. */
    duskOrDown = isDuskOrDawn(FOG_COLOR);
    night      = isNight(FOG_COLOR);
    phase      = moonPhase(TEXCOORD_0);

#else
    // Copied from the vanilla uv.vertex
    gl_Position = WORLDVIEWPROJ * POSITION;
#endif /* defined(ENABLE_SHADER_SUN_MOON) */

    uv = TEXCOORD_0;
}

// Local Variables:
// mode: glsl
// indent-tabs-mode: nil
// End:
